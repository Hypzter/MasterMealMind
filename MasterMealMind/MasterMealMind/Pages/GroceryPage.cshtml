@page
@model GroceryPageModel
@{
}

<div class="container">
		<p class="italic-bold-text">Lägg till matvara</p>
	<form method="post" asp-page-handler="AddGrocery">
		<div class="row">
			<div class="form-group col-md-6">

				<label for="Name" class="sr-only">Namn</label>
				<input asp-for="NewGrocery.Name" type="text" class="form-control" id="Name" placeholder="Lägg till namn" />
			</div>
			<div class="form-group col-md-6">

				<label for="Quantity" class="sr-only">Antal</label>
				<input asp-for="NewGrocery.Quantity" type="number" class="form-control" id="Quantity" placeholder="Lägg till antal"/>
			</div>
		</div>
		<div class="form-group">

			<label for="Description" class="sr-only">Beskrivning</label>
			<textarea asp-for="NewGrocery.Description" class="form-control" id="Description" placeholder="Lägg till beskrivning"></textarea>
		</div>

		<button class="btn btn-primary btn-block fa-lg mb-3" type="submit">Lägg till / Ändra</button>
	</form>



	@if (Model.Groceries != null)
	{
		<table class="table table-striped">
			<thead>
				<tr>
					<th scope="col">
						<form method="post" asp-page-handler="AddToIngredientSearchList" id="formSelectedGroceryNames">
							<input type="hidden" name="selectedGroceryNames" id="selectedGroceryNames" />
							<button class="btn-sm btn-primary" data-bs-toggle="tooltip" data-bs-placement="top" title="Visar recept på markerade matvaror" type="submit">
								Sök recept
							</button>
						</form>
					</th>
					<th scope="col">Namn</th>
					<th scope="col">Antal</th>
					<th scope="col">Beskrivning</th>
					<th scope="col">Ändra</th>
					<th scope="col">Ta bort</th>
				</tr>
			</thead>
			<tbody>
				@foreach (var grocery in Model.Groceries)
				{
					<tr>
						<td><input type="checkbox" class="product-checkbox" data-grocery-name="@grocery.Name" value="@grocery.Name"/></td>
						<td>@grocery.Name</td>
						<td>@grocery.Quantity</td>
						<td>@grocery.Description</td>
						<td>
							<form method="post" asp-page-handler="EditGrocery">
								<input type="hidden" name="editId" value="@grocery.Id">
								<button type="submit" class="btn btn-warning">Ändra</button>
							</form>
						</td>
						<td>
							<form method="post" asp-page-handler="DeleteGrocery">
								<input type="hidden" name="deleteId" value="@grocery.Id">
								<button type="submit" class="btn btn-danger">Ta bort</button>
							</form>
						</td>
					</tr>
				}

			</tbody>
		</table>
	}
</div>
@* <script>
	var selectedIds = [];
	var checkboxes = document.querySelectorAll('.product-checkbox');
	function updateSelectedIds() {
		selectedIds = Array.from(checkboxes)
			.filter(function (checkbox) {
				return checkbox.checked;
			})
			.map(function (checkbox) {
				return checkbox.getAttribute('data-product-id');
			});

		// Update the hidden input field with selected IDs
		document.getElementById('selectedProductIds').value = selectedIds.join(',');
	}

	var allChecked = false;
	checkboxes.forEach(function (checkbox) {
		checkbox.addEventListener('change', function () {
			var notAllChecked = false;

			checkboxes.forEach(function (checkbox) {
				if (!checkbox.checked) {
					notAllChecked = true;
				}
			});

			allChecked = !notAllChecked; // Update allChecked based on all checkboxes status
			updateIcon(allChecked);
			updateSelectedIds();
		});
	});

	const getGroceries = (event) => {
		event.preventDefault()
		let checkboxes = document.getElementsByClassName("product-checkbox")
		let boxArray = Array.from(checkboxes)
		let checkedIngredients = boxArray.filter(e => e.checked == true).map(e => e.dataset.groceryName)
		console.log(checkedIngredients)
		document.getElementById('selectedGroceryNames').value = checkedIngredients.join(','); // Joining the array into a comma-separated string
		// document.getElementById("formSelectedGroceryNames").submit()
	}
</script> *@